\documentclass[article,nojss]{jss}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% declarations for jss.cls %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% almost as usual
\author{Andreas Alfons\\Vienna University of\\Technology \And Matthias Templ\\Vienna University of\\Technology,\\Statistics Austria \And Peter Filzmoser\\Vienna University of\\Technology}
\title{Simulation of EU-SILC Population Data: Using the \proglang{R} Package \pkg{simPopulation}}

%% for pretty printing and a nice hypersummary also set:
\Plainauthor{Andreas Alfons, Matthias Templ, Peter Filzmoser} %% comma-separated
\Plaintitle{Simulation of EU-SILC Population Data: Using the R Package simPopulation} %% without formatting
\Shorttitle{Simulation of EU-SILC Population Data} %% a short title (if necessary)

%% an abstract and keywords
\Abstract{
This vignette demonstrates the use of \pkg{simPopulation} for simulating 
population data in an application to the EU-SILC example data from the package. 
It presents a wrapper function tailored specifically towards EU-SILC data for 
convenience and ease of use, as well as detailed instructions for performing 
each of the four involved data generation steps separately. In addition, the 
generation of diagnostic plots for the simulated population data is illustrated.
}
\Keywords{\proglang{R}, synthetic data, simulation, survey statistics, EU-SILC}
\Plainkeywords{R, synthetic data, simulation, survey statistics, EU-SILC} %% without formatting
%% at least one keyword must be supplied

%% publication information
%% NOTE: Typically, this can be left commented and will be filled out by the technical editor
%% \Volume{13}
%% \Issue{9}
%% \Month{September}
%% \Year{2004}
%% \Submitdate{2004-09-29}
%% \Acceptdate{2004-09-29}

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Andreas Alfons\\
  Department of Statistics and Probability Theory\\
  Vienna University of Technology\\
  Wiedner Hauptstra\ss e 7\\
  1040 Vienna, Austria\\
  E-mail: \email{alfons@statistik.tuwien.ac.at}\\
  URL: \url{http://www.statistik.tuwien.ac.at/public/alfons/}
}
%% It is also possible to add a telephone and fax number
%% before the e-mail in the following format:
%% Telephone: +43/1/31336-5053
%% Fax: +43/1/31336-734

%% for those who use Sweave please include the following line (with % symbols):
%% need no \usepackage{Sweave.sty}

%%\VignetteIndexEntry{Simulation of EU-SILC Population Data: Using the R Package simPopulation}
%%\VignetteDepends{simPopulation}
%%\VignetteKeywords{R, synthetic data, simulation, survey statistics, EU-SILC}
%%\VignettePackage{simPopulation}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% additional packages
\usepackage{color}  % for comments


\begin{document}

%% set some default options
<<echo=FALSE, results=hide>>=
library(lattice)
lattice.options(default.theme = canonical.theme(color = FALSE))
sl <- trellis.par.get("superpose.line")
sl$col[1] <- "#A9A9A9"  # set first color to dark grey
rl <- trellis.par.get("reference.line")
rl$lty <- 2
trellis.par.set(superpose.line=sl, reference.line=rl)
options(width=75)
@

%% specify folder and name for Sweave graphics
\SweaveOpts{prefix.string=figures/fig}


% ------------
% introduction
% ------------

\section{Introduction}

This package vignette is a companion to \citet{alfons10a} that shows how the 
proposed framework for the simulation of population data can be applied in 
\proglang{R} \citep{R10} using the package \pkg{simPopulation} 
\citep{alfons10h}. The data simulation framework consists of four steps:
\begin{enumerate}
  \item Setup of the household structure
  \item Simulation of categorical variables
  \item Simulation of (semi-)continuous variables
  \item Splitting (semi-)continuous variables into components
\end{enumerate}
Note that this vignette does not motivate, describe or evaluate the statistical 
methodology of the framework. Instead it is focused on the \proglang{R} code to 
generate synthetic population data and produce diagnostic plots. For details on 
the statistical methodology, the reader is referred to \citet{alfons10a}.

The \emph{European Union Statistics on Income and Living Conditions} (EU-SILC) 
is panel survey conducted in European countries and serves as data basis for 
the estimation social inclusion indicators in Europe. EU-SILC data are highly 
complex and contain detailed information on the income of the sampled 
individuals and households. More information on EU-SILC can be found in 
\citet{EU-SILC04b}. 

In \citet{alfons10a}, three methods for the simulation of the net income of the 
individuals in the population are proposed and analyzed:
\begin{description}
  \item[MP] Multinomial logistic regression models with random draws from the 
  resulting categories. For the categories corresponding to the upper tail, the 
  values are drawn from a (truncated) generalized Pareto distribution, for the 
  other categories from a uniform distribution.
  \item[TR] Two-step regression models with trimming and random draws from the 
  residuals.
  \item[TN] Two-step regression models with trimming and random draws from a 
  normal distribution.
\end{description}
The first two steps of the analysis, namely the simulation of the household 
structure and additional categorical variables, are performed in exactly the 
same manner for the three scenarios. While the simulation of the income 
components is carried out with the same parameter settings, the results of 
course depend on the simulated net income.

It is important to note that the original Austrian EU-SILC sample provided by 
Statistics Austria and used in \citet{alfons10a} is confidential, hence the 
results presented there cannot be reproduced in this vignette. Nevertheless, 
the code for such an analysis is presented here using the example data from 
the package, which has been synthetically generated itself. In fact, this 
example data set is a sample drawn from one of the populations generated in 
\citet{alfons10a}. However, the sample weights have been modified such that the 
size of the resulting populations is about $1\%$ of the real Austrian 
population in order to keep the computation time low. Table~\ref{tab:var} lists 
the variables of the example data used in the code examples.

With the following commands, the package and the example data are loaded. 
Furthermore, the numeric value stored in \code{seed} will be used as 
seed for the random number generator in the examples to make the results 
reproducible.
% ----------
<<results=hide>>=
library(simPopulation)
data(eusilcS)
seed <- 1234
@

\begin{table}
\centering
\caption{Variables of the EU-SILC example data in \pkg{simPopulation}.}
\label{tab:var}
\begin{tabular}{llll}
\noalign{\medskip}\hline\noalign{\smallskip}
\textbf{Variable} & \textbf{Name} & \multicolumn{2}{l}{\textbf{Type}} \\
\noalign{\smallskip}\hline\noalign{\smallskip}
Region & \code{db040} & Categorical & 9 levels \\
%\noalign{\smallskip}
Household size & \code{hsize} & Categorical & 9 levels \\
%\noalign{\smallskip}
Age & \code{age} & Categorical & \\
%\noalign{\smallskip}
Gender & \code{rb090} & Categorical & 2 levels \\
%\noalign{\smallskip}
Economic status & \code{pl030} & Categorical & 7 levels \\
%\noalign{\smallskip}
Citizenship & \code{pb220a} & Categorical & 3 levels \\
%\noalign{\smallskip}
Personal net income & \code{netIncome} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Employee cash or near cash income & \code{py010n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Cash benefits or losses from self-employment & \code{py050n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Unemployment benefits & \code{py090n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Old-age benefits & \code{py100n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Survivor's benefits & \code{py110n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Sickness benefits & \code{py120n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Disability benefits & \code{py130n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Education-related allowances & \code{py140n} & \multicolumn{2}{l}{Semi-continuous} \\
%\noalign{\smallskip}
Household sample weights & \code{db090} & \multicolumn{2}{l}{Continuous} \\
%\noalign{\smallskip}
Personal sample weights & \code{rb050} & \multicolumn{2}{l}{Continuous} \\
\noalign{\smallskip}\hline\noalign{\smallskip}
\end{tabular}
\end{table}

The rest of this vignette is organized as follows. Section~\ref{sec:wrapper} 
illustrates the use of a convenient wrapper function for the generation of 
EU-SILC population data. In Section~\ref{sec:step}, detailed instructions are 
given for each step in the data generation process as well as for the 
generation of diagnostic plots. The final Section~\ref{sec:conclusions} 
concludes.


% ---------------
% EU-SILC wrapper
% ---------------

\section{Wrapper function for EU-SILC} \label{sec:wrapper}
A convenient way of generating synthetic EU-SILC population data is provided by 
the wrapper function \code{simEUSILC()}, which performs the four steps of the 
data simulation procedure at once. For each step, the names of the variables to 
be simulated can be supplied. However, the default values for the respective 
arguments are given by the variables names used in \citet{alfons10a}. Since the 
same names are used in the example data, the complex procedures for the three 
different methods can be carried out with very simple commands.
% ----------
<<>>=
#<<eval=FALSE>>=
eusilcMP <- simEUSILC(eusilcS, upper = 200000, equidist = FALSE, seed = seed)
eusilcTR <- simEUSILC(eusilcS, method = "twostep", seed = seed)
eusilcTN <- simEUSILC(eusilcS, method = "twostep", residuals = FALSE, 
    seed = seed)
@
% ----------
Note that the default is to use the MP procedure. An upper bound for the net 
income is supplied using the argument \code{upper}, while the argument 
\code{equidist} is set to \code{FALSE} so that the breakpoints for the 
discretization of the net income are given by quantiles with non-equidistant 
probabilities as described in \citet{alfons10a}. The twostep regression 
approaches are performed by setting \code{method = "twostep"}, in which case 
the logical argument \code{residuals} specifies whether variability should be 
added by random draws from the residuals (TR method, the default) or from a 
normal distribution (TN method). In both cases, the default trimming parameter 
\code{alpha = 0.01} is used.

The synthetic populations generated with the wrapper function are not further 
evaluated here, instead a detailed illustration of each step along with 
diagnostic plots is provided in the following section.


% ------------
% step by step
% ------------

\section{Step by step instructions and diagnostics} \label{sec:step}
As for the wrapper function \code{simEUSILC()}, the variable names of the 
example data set are used as default values for the corresponding arguments of 
the functions for the different steps of the procedure. Nevertheless, in order 
to demonstrate how these arguments are used, the names of the involved 
variables are always supplied in the commands shown in this section.

The first step of the analysis is to set up the basic household structure using 
the function \code{simStructure()}. Note that a variable named \code{"hsize"} 
giving the household sizes is generated automatically in this example, but the 
name of the corresponding variable in the sample data can also be specified as 
an argument. Furthermore, the argument \code{additional} specifies the 
variables that define the household structure in addition to the household 
size (in this case age and gender).
% ----------
<<>>=
#<<eval=FALSE>>=
eusilcP <- simStructure(eusilcS, hid = "db030", w = "db090", 
    strata = "db040", additional = c("age", "rb090"))
@

For the rest of the procedure, combined age categories are used for the 
individuals in order to reduce the computation time of the statistical models.
% ----------
<<>>=
#<<eval=FALSE>>=
breaks <- c(min(eusilcS$age), seq(15, 80, 5), max(eusilcS$age))
eusilcS$ageCat <- as.character(cut(eusilcS$age, 
        breaks=breaks, include.lowest=TRUE))
eusilcP$ageCat <- as.character(cut(eusilcP$age, 
        breaks=breaks, include.lowest=TRUE))
@

Additional categorical variables are then simulated using the function 
\code{simCategorical()}. The argument \code{basic} thereby specifies the 
already generated variables for the basic household structure (age category, 
gender and household size), while \code{additional} specifies the variables to 
be simulated in this step (economic status and citizenship).
% ----------
<<keep.source=TRUE>>=
basic <- c("ageCat", "rb090", "hsize")
eusilcP <- simCategorical(eusilcS, eusilcP, w = "rb050", strata = "db040", 
    basic = basic, additional = c("pl030", "pb220a"))
@

%Mosaic plots are available as graphical diagnostic tools for checking whether 
%the structures of categorical variables are reflected in the synthetic 
%population. As representative examples, mosaic plots of the variable 
%combinations gender, region and household size, as well as gender, economic 
%status and citizenship are created. To create more readable labels, some fine 
%tuning is necessary. The mosaic plots are implemented using the package 
%\pkg{vcd} \citep{meyer06, meyer10}, which contains extensive functionality for 
%customization. In these examples, the function \code{labeling_border()} is used 
%to display more meaningful labels for the variables and abbreviate the names of 
%the categories for some variables. The resulting 
%plots are shown in Figure~\ref{fig:mosaic}.

Mosaic plots are available as graphical diagnostic tools for checking whether 
the structures of categorical variables are reflected in the synthetic 
population. They are implemented in the function \code{spMosaic()} based on the 
package \pkg{vcd} \citep{meyer06, meyer10}, which contains extensive 
functionality for customization. 

With the following commands, mosaic plots for the variables gender, region and 
household size are created (see Figure~\ref{fig:mosaic}, \emph{top}). The 
function \code{labeling_border()} from package \pkg{vcd} is thereby used to set 
shorter labels for the different regions and to display more meaningful labels 
for the variables.
% ----------
<<eval=FALSE, keep.source=TRUE>>=
abb <- c("B", "LA", "Vi", "C", "St", "UA", "Sa", "T", "Vo")
nam <- c(rb090 = "Gender", db040 = "Region", hsize = "Household size")
lab <- labeling_border(set_labels = list(db040 = abb), 
    set_varnames = nam)
spMosaic(c("rb090", "db040", "hsize"), "rb050", eusilcS, 
    eusilcP, labeling = lab)
@

In addition, mosaic plots for the variables  gender, economic status and 
citizenship are produced (see Figure~\ref{fig:mosaic}, \emph{bottom}). Also in 
this case, \code{labeling_border()} is used for some fine tuning. In 
particular, the categories of citizenship are abbreviated and again more 
meaningful labels for the variables are set.
% ----------
<<eval=FALSE, keep.source=TRUE>>=
nam <- c(rb090 = "Gender", pl030 = "Economic status", 
    pb220a = "Citizenship")
lab <- labeling_border(abbreviate = c(FALSE, FALSE, TRUE), 
    set_varnames = nam)
spMosaic(c("rb090", "pl030", "pb220a"), "rb050", eusilcS, 
    eusilcP, labeling = lab)
@

\begin{figure}
\begin{center}
\setkeys{Gin}{width=0.8\textwidth}
<<echo=FALSE, results=hide, fig=TRUE, width=8, height=4.25>>=
abb <- c("B","LA","Vi","C","St","UA","Sa","T","Vo")
nam <- c(rb090="Gender", db040="Region", hsize="Household size")
lab <- labeling_border(set_labels=list(db040=abb), set_varnames=nam)
spMosaic(c("rb090", "db040", "hsize"), "rb050", eusilcS, eusilcP, labeling=lab)
@
<<echo=FALSE, results=hide, fig=TRUE, width=8, height=4.25>>=
nam <- c(rb090="Gender", pl030="Economic status", pb220a="Citizenship")
lab <- labeling_border(abbreviate=c(FALSE, FALSE, TRUE), set_varnames=nam)
spMosaic(c("rb090", "pl030", "pb220a"), "rb050", eusilcS, eusilcP, labeling=lab)
@
\caption{\emph{Top}: Mosaic plots of gender, region and household size.
\emph{Bottom}: Mosaic plots of gender, economic status and citizenship.}
\label{fig:mosaic}
\end{center}
\end{figure}

Next, the function \code{simContinuous()} is used to simulate the net income 
according to the three proposed methods. The same parameter settings as in 
Section~\ref{sec:wrapper} are thereby used for each of the methods. In 
any case, the argument \code{basic} specifies the predictor variables (age 
category, gender, household size, economic status and citizenship), while the 
argument \code{additional} specifies the variable to be simulated. 

Note that the current state of the random number generator is stored beforehand 
so that the different methods can all be started with the same seed. 
Furthermore, the random seed after each of the methods has finished is stored 
so that the simulation of the income components can later on continue from 
there.
% ----------
<<>>=
#<<eval=FALSE>>=
seedP <- .Random.seed
basic <- c(basic, "pl030", "pb220a")
eusilcMP <- simContinuous(eusilcS, eusilcP, w = "rb050", strata = "db040", 
    basic = basic, additional = "netIncome", upper = 200000, equidist = FALSE, 
    seed=seedP)
seedMP <- .Random.seed
eusilcTR <- simContinuous(eusilcS, eusilcP, w = "rb050", strata = "db040", 
    basic = basic, additional = "netIncome", method="lm", seed=seedP)
seedTR <- .Random.seed
eusilcTN <- simContinuous(eusilcS, eusilcP, w = "rb050", strata = "db040", 
    basic = basic, additional = "netIncome", method="lm", residuals=FALSE, 
    seed=seedP)
seedTN <- .Random.seed
@

<<echo=FALSE, results=hide>>=
options(width=66)
@

Two functions are available as diagnostic tools for (semi-)continuous 
variables: \code{spCdfplot()} for comparing the cumlative distribution 
functions, and \code{spBwplot()} for comparisons with box-and-whisker plots. 
Both are implemented based on the package \pkg{lattice} \citep{sarkar08, 
sarkar10}.

The following commands are used to produce the two plots in 
Figure~\ref{fig:income}. For better visibility of the differences in the main 
parts of the cumulative distribution functions, only the parts between 0 and 
the weighted $99\%$ quantile of the sample are plotted (see 
Figure~\ref{fig:income}, \emph{left}). Furthermore, the box-and-whisker plots 
by default do not display any points outside the extremes of
the whiskers (see Figure~\ref{fig:income}, \emph{right}). This is because 
population data are typically very large, which almost always would result in a 
large number of observations ouside the whiskers. Also note that a list 
containing the three populations is supplied as the argument \code{dataP} of 
the plot functions.
% ----------
%<<>>
<<eval=FALSE, >>=
subset <- which(eusilcS[, "netIncome"] > 0)
q <- quantileWt(eusilcS[subset, "netIncome"], 
    eusilcS[subset, "rb050"], probs = 0.99)
listP <- list(MP=eusilcMP, TR=eusilcTR, TN=eusilcTN)
spCdfplot("netIncome", "rb050", dataS=eusilcS, dataP=listP, xlim=c(0, q))
spBwplot("netIncome", "rb050", dataS=eusilcS, dataP=listP, pch="|")
@

\begin{figure}
\begin{center}
\setkeys{Gin}{width=0.4\textwidth}
<<echo=FALSE, results=hide>>=
subset <- which(eusilcS[, "netIncome"] > 0)
q <- quantileWt(eusilcS[subset, "netIncome"], eusilcS[subset, "rb050"], 
    probs=0.99)
listP <- list(MP=eusilcMP, TR=eusilcTR, TN=eusilcTN)
@
<<echo=FALSE, results=hide, fig=TRUE, width=4, height=4>>=
print(spCdfplot("netIncome", "rb050", dataS=eusilcS, dataP=listP, xlim=c(0, q)))
@
<<echo=FALSE, results=hide, fig=TRUE, width=4, height=4>>=
print(spBwplot("netIncome", "rb050", dataS=eusilcS, dataP=listP, pch="|"))
@
\caption{\emph{Left}: Cumulative distribution functions of personal net income.
For better visibility, the plot shows only the main parts of the data.
\emph{Right:} Box plots of personal net income. Points outside the extremes of
the whiskers are not plotted.}
\label{fig:income}
\end{center}
\end{figure}

One of the main requirements in the simulation of population data is that 
heterogeneities between subgroups are reflected \citep[see][]{alfons10a}. Since 
\code{spCdfplot()} and \code{spBwplot()} are based on \pkg{lattice}, this can 
easily be checked by producing conditional plots. With the following commands, 
the box-and-whisker plots in Figure~\ref{fig:cond} are produced. The 
conditioning variables gender (\emph{top left}), citizenship (\emph{top 
right}), region (\emph{bottom left}) and economic status (\emph{bottom right}) 
are thereby used. For finetuning, the layout of the panels is specified with 
the \code{layout} argument provided by the \pkg{lattice} framework.
% ----------
<<eval=FALSE>>=
spBwplot("netIncome", "rb050", "rb090", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,2))
spBwplot("netIncome", "rb050", "pb220a", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,3))
spBwplot("netIncome", "rb050", "db040", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,9))
spBwplot("netIncome", "rb050", "pl030", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,7))
@

\begin{figure}
\begin{center}
\setkeys{Gin}{width=0.4\textwidth}
<<echo=FALSE, results=hide, fig=TRUE, width=4, height=4>>=
print(spBwplot("netIncome", "rb050", "rb090", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,2)))
@
<<echo=FALSE, results=hide, fig=TRUE, width=4, height=4>>=
print(spBwplot("netIncome", "rb050", "pb220a", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,3)))
@
<<echo=FALSE, results=hide, fig=TRUE, width=4, height=9>>=
print(spBwplot("netIncome", "rb050", "db040", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,9)))
@
<<echo=FALSE, results=hide, fig=TRUE, width=4, height=9>>=
print(spBwplot("netIncome", "rb050", "pl030", dataS=eusilcS, 
    dataP=listP, pch="|", layout=c(1,7)))
@
\caption{Box plots of personal net income split by gender (\emph{top left}), 
citizenship (\emph{top right}), region (\emph{bottom left}) and economic
status (\emph{bottom right}). Points outside the extremes of the whiskers are
not plotted.}
\label{fig:cond}
\end{center}
\end{figure}

The last step of the analysis is to simulate the income components. This is 
done based on resampling of fractions conditional on net income category and 
economic status. Therefore, the net income categories need to be constructed 
first. With the function \code{getBreaks()}, default breakpoints based on 
quantiles are computed. In this example, the argument \code{upper} is set to 
\code{Inf} to avoid problems with different maximum values in the three 
synthetic populations, and the argument \code{equidist} is set to \code{FALSE} 
such that non-equidistant probabilities as described in \citet{alfons10a} are 
used for the calculation of the quantiles.
% ----------
<<keep.source=TRUE>>=
breaks <- getBreaks(eusilcS$netIncome, eusilcS$rb050, 
    upper = Inf, equidist = FALSE)
eusilcS$netIncomeCat <- getCat(eusilcS$netIncome, breaks)
eusilcMP$netIncomeCat <- getCat(eusilcMP$netIncome, breaks)
eusilcTR$netIncomeCat <- getCat(eusilcTR$netIncome, breaks)
eusilcTN$netIncomeCat <- getCat(eusilcTN$netIncome, breaks)
@

Once the net income categories are constructed, the income components are 
simulated using the function \code{simComponents()}. The arguments 
\code{total}, \code{components} and \code{conditional} thereby specify the 
variable to be split, the variables containing the components, and the 
conditioning variables, respectively. In addition, for each of the three 
populations the seed of the random number generator is set to the corresponding 
state after the simulation of the net income.
% ----------
<<>>=
#<<eval=FALSE>>=
components <- c("py010n", "py050n", "py090n", 
        "py100n", "py110n", "py120n", "py130n", "py140n")
eusilcMP <- simComponents(eusilcS, eusilcMP, w = "rb050", 
    total = "netIncome", components = components, 
    conditional = c("netIncomeCat", "pl030"), seed = seedMP)
eusilcTR <- simComponents(eusilcS, eusilcTR, w = "rb050", 
    total = "netIncome", components = components, 
    conditional = c("netIncomeCat", "pl030"), seed=seedTR)
eusilcTN <- simComponents(eusilcS, eusilcTN, w = "rb050", 
    total = "netIncome", components = components, 
    conditional = c("netIncomeCat", "pl030"), seed=seedTN)
@

Finally, diagnostic box-and-whisker plots of the income components are produced 
with the function \code{spBwplot()}. Since the box widths correspond to the 
ratio of non-zero observations to the total number of observed values and most 
of the components contain large proportions of zeros, a minimum box width is 
specified using the argument \code{minRatio}. Figure~\ref{fig:comp} contains
the resulting plots.
% ----------
<<eval=FALSE>>=
listP <- list(MP=eusilcMP, TR=eusilcTR, TN=eusilcTN)
spBwplot(components, "rb050", dataS=eusilcS, 
    dataP=listP, pch="|", minRatio=0.2, layout=c(2,4))
@

\begin{figure}
\begin{center}
\setkeys{Gin}{width=0.8\textwidth}
<<echo=FALSE, results=hide>>=
listP <- list(MP=eusilcMP, TR=eusilcTR, TN=eusilcTN)
@
<<echo=FALSE, results=hide, fig=TRUE, width=8, height=6>>=
print(spBwplot(components, "rb050", dataS=eusilcS, 
    dataP=listP, pch="|", minRatio=0.2, layout=c(2,4)))
@
\caption{Box plots of the income components. Points outside the extremes of the
whiskers are not plotted.}
\label{fig:comp}
\end{center}
\end{figure}


% -----------
% conclusions
% -----------

\section{Conclusions} \label{sec:conclusions}
In this vignette, the use of \pkg{simPopulation} for simulating population data 
has been demonstrated in an application to the EU-SILC example data from the 
package. Both the simulation of synthetic population data and the generation of 
diagnostic plots have been illustrated in a similar analysis as in 
\citet{alfons10a}.

The code examples show that the functions are easy to use and that the 
arguments have sensible default values. Nevertheless, the behavior of the 
functions is highly customizable. In particular the functions for the 
diagnostic plots benefit from the implementations based on the packages 
\pkg{vcd} and \pkg{lattice}.


%% ----------
%% acknowledgments
%% ----------

\section*{Acknowledgments}
This work was partly funded by the European Union (represented by the European
Commission) within the 7$^{\mathrm{th}}$ framework programme for research
(Theme~8, Socio-Economic Sciences and Humanities, Project AMELI (Advanced
Methodology for European Laeken Indicators), Grant Agreement No.~217322). Visit
\url{http://ameli.surveystatistics.net} for more information on the project.


%% ----------
%% bibliography
%% ----------

\bibliography{simPopulation}

\end{document}
